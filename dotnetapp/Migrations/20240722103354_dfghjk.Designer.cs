// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using dotnetapp.Models;

#nullable disable

namespace dotnetapp.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240722103354_dfghjk")]
    partial class dfghjk
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("dotnetapp.Models.HistoricalTour", b =>
                {
                    b.Property<int>("HistoricalTourID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("HistoricalTourID"), 1L, 1);

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("EndTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("StartTime")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("TourName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("HistoricalTourID");

                    b.ToTable("HistoricalTours");

                    b.HasData(
                        new
                        {
                            HistoricalTourID = 1,
                            Capacity = 20,
                            Description = "Explore the ancient ruins of Rome including the Colosseum, Roman Forum, and Palatine Hill.",
                            EndTime = "2023-01-01 12:00 PM",
                            Location = "Rome, Italy",
                            StartTime = "2023-01-01 10:00 AM",
                            TourName = "Ancient Rome Tour"
                        },
                        new
                        {
                            HistoricalTourID = 2,
                            Capacity = 15,
                            Description = "Discover the mysteries of the Great Pyramids and the Sphinx.",
                            EndTime = "2023-01-11 01:00 PM",
                            Location = "Giza, Egypt",
                            StartTime = "2023-01-11 10:00 AM",
                            TourName = "Egyptian Pyramids Adventure"
                        },
                        new
                        {
                            HistoricalTourID = 3,
                            Capacity = 25,
                            Description = "Visit some of England's most iconic medieval castles and learn about their history.",
                            EndTime = "2023-01-21 12:00 PM",
                            Location = "Various Locations, England",
                            StartTime = "2023-01-21 10:00 AM",
                            TourName = "Medieval Castles Tour"
                        },
                        new
                        {
                            HistoricalTourID = 4,
                            Capacity = 20,
                            Description = "Explore the art and architecture of Renaissance Florence, including the Duomo and Uffizi Gallery.",
                            EndTime = "2023-01-31 12:00 PM",
                            Location = "Florence, Italy",
                            StartTime = "2023-01-31 10:00 AM",
                            TourName = "Renaissance Florence Tour"
                        },
                        new
                        {
                            HistoricalTourID = 5,
                            Capacity = 30,
                            Description = "Learn about the events leading up to the American Revolution, including visits to historic sites like the Boston Tea Party Ships and Museum.",
                            EndTime = "2023-02-10 12:00 PM",
                            Location = "Boston, USA",
                            StartTime = "2023-02-10 10:00 AM",
                            TourName = "American Revolution Tour"
                        });
                });

            modelBuilder.Entity("dotnetapp.Models.Participant", b =>
                {
                    b.Property<int>("ParticipantID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("ParticipantID"), 1L, 1);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("HistoricalTourID")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("ParticipantID");

                    b.HasIndex("HistoricalTourID");

                    b.ToTable("Participants");
                });

            modelBuilder.Entity("dotnetapp.Models.Participant", b =>
                {
                    b.HasOne("dotnetapp.Models.HistoricalTour", "HistoricalTour")
                        .WithMany("Participants")
                        .HasForeignKey("HistoricalTourID")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("HistoricalTour");
                });

            modelBuilder.Entity("dotnetapp.Models.HistoricalTour", b =>
                {
                    b.Navigation("Participants");
                });
#pragma warning restore 612, 618
        }
    }
}
